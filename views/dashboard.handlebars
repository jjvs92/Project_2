<div class="page-mask">
{{> headerDashboard}}
  <div class="dashboard">
    {{!-- Games --}}
    <div class="col-6 games" id="scrollBar"></div>
    <div class="col-6 leaderBoard">
      {{!-- Leader Board Table --}}
      <h2 class="leader">Leaderboard</h2>
      <table class="leaderFlex">
        <tr>
          <th class="leaderNum">#</th>
          <th class="leaderName">User</th>
          <th class="leaderWinnings">Wallet</th>
        </tr>
      </table>
      {{!-- Bets Log --}}
      <h2 class="betsLive">Bets</h2>
      <ol>
        <div class="betsHistory" id="scrollBar"></div>
      </ol>

    </div>
  </div>
  {{> footerDashboard}}
</div>
  <!-- Modal -->
  <div class="modal1">
    <div class="modalTitle">
      <h4 class="modalHeader">
        Place Bet
      </h4>
    </div>
    <div class="modalBody">
      <p class="modalContent">
        How much would you like to bet on the <span class="placeBetTeam"></span>?
      </p>
      <input class="betInput" type="number" min="1" value="" name="bet" required>
    </div>
    <div class="modalFlexRow">
      <button class="btn btn-warning cancelModal">Cancel</button>
      <button class="btn btn-success confirmModal">Confirm</button>
    </div>
     <div class="warning">
      <p class="warningText"></p>
    </div>
  </div>


<script>

  var key = "9y4rxzqa4dvhbn5j7ftt5jbz"
  var today = moment(new Date(), "YYYY/MM/DD").format("YYYY/MM/DD");
  var hour = moment().calendar();
  var teamBet = "";
  console.log(hour);
  
  var findResults = function() {

  setTimeout(
    function() {
      var winners = [];
      var losers = [];
      $.ajax({
        url: "https://cors-everywhere.herokuapp.com/http://api.sportradar.us/mlb/trial/v6.5/en/games/" + today + "/boxscore.json?api_key=" + key,
        type: "GET",
        success: function(res) {
          console.log(res);
          for (var j = 0; j < res.league.games.length; j++) {
            var thisGame = res.league.games[j];
            var homeCity = thisGame.game.home.market;
            var awayCity = thisGame.game.away.market;
            var homeTeam = thisGame.game.home.name;
            var awayTeam = thisGame.game.away.name;
            var homeScore = thisGame.game.home.runs;
            var awayScore = thisGame.game.away.runs;
            var gameStatus = thisGame.game.status;
            var thisGameId = thisGame.game.id
            var winner;

            var findWinner = function() {
              if (homeScore > awayScore) {
                winner = homeCity + " " + homeTeam
              } else {
                winner = awayCity + " " + awayTeam
              };
            };
            function updateWinner() {
              // event.preventDefault();
              var id = (JSON.parse([j]) + 1);
              var updatedWinner = winner;
      
              var newResult = {
                game_result: updatedWinner,
                game_id: thisGameId
              };

              console.log("NEW RESULT:");
              console.log(newResult);

              $.ajax('/api/games', {
                type: "PUT",
                data: newResult 
              }).then(
                function() {
                  console.log("Result added", newResult);
                }
              );
            }
    
            if (gameStatus === "closed") {
              console.log("this game is over");
              findWinner();
              updateWinner();
            } else {
              console.log("this game is NOT over");
            };

            if (homeScore > awayScore) {
              winners.push(homeTeam);
              losers.push(awayTeam);
            } else {
              winners.push(awayTeam);
              losers.push(homeTeam);
            }
            };
            
          }
        });
      }, 1500);
      
};
  // THis here is console logging  the ID of the user that is signed in... when wanting to reference the user we can use {{userid}}--- this is becuase it was passed in authcontroller.js

  var signedInUser = {{userid}};
  var signedInWallet = {{userWallet}};
  var signedInUserName = "{{userName}}";
  function showUserID(){
    console.log({{userid}});
    console.log({{userWallet}});
    console.log(signedInUserName);
  }
  showUserID();
            
  //-------------------------------------------------


  var getGames = function() {
    $.ajax({
      url: "https://cors-everywhere.herokuapp.com/http://api.sportradar.us/mlb/trial/v6.5/en/games/2018/07/02/schedule.json?api_key=" + key,
      type: "GET",
      success: function(data) {
        // console.log(data.games.length);
        for (var i = 0; i < data.games.length; i++) {
          var homeTeams = [];
          var awayTeams = [];
          var awayTeam = data.games[i].away.name;
          var homeTeam = data.games[i].home.name;

          homeTeams.push(homeTeam);
          awayTeams.push(awayTeam);
        }
      }
    });
  };

var showAction = function() {
  var homeTeams = [];
  var awayTeams = [];
  var createDiv = $("<div class='card text-center'></div>");
  var createImg = $("<img>");
  var todaysGames = [];

  var checkGames = function(games) {
    $.get("/api/games", function() {

    })
  }

  var gamesAlreadyPosted = [];

  $.get("/api/games", function(data){

    for(var w=0; w < data.length; w++){
      var test= data[w].game_id;
        gamesAlreadyPosted.push(test)
        //console.log(test);
    }
  })        

  $(".loginPrompt").empty();
  $.ajax({
    url: "https://cors-everywhere.herokuapp.com/http://api.sportradar.us/mlb/trial/v6.5/en/games/" + today + "/schedule.json?api_key=" + key,
    type: "GET",
    success: function(data) {
      console.log(data.date);

   
          console.log("--------------------------")
          console.log(gamesAlreadyPosted);
          console.log("--------------------------")


      //console.log(data.games.length);
      // console.log(data.games.length);
      for (var i = 0; i < data.games.length; i++) {
        var gameNum = [i + 1];
        var homeCity = data.games[i].home.market;
        var awayCity = data.games[i].away.market;
        var awayTeam = data.games[i].away.name;
        var homeTeam = data.games[i].home.name;
        var status = data.games[i].status;
        var gameStatus = status.toUpperCase();
        var gameDate = data.date;
        var gameID = data.games[i].id;
        var gameTime = data.games[i].scheduled;
        var realTime = moment(gameTime).format("hh:mm");
        var textColor;

        if(gameStatus === 'CLOSED')
        {
          textColor = "red";
        }
        else if(gameStatus === 'INPROGRESS')
        {
          textColor = "orange";
        }
        else if(gameStatus === 'POSTPONED')
        {
          textColor = "grey";
        }
        else if(gameStatus === 'SCHEDULED')
        {
          textColor = "green";
        }

        console.log("GAME TIME:");
        console.log(realTime);

        var newGame = {
          home_team: homeCity + " " + homeTeam,
          away_team: awayCity + " " + awayTeam,
          game_status: gameStatus,
          game_id: gameID,
          game_date: gameDate
        };
          var stringGameID= JSON.stringify(gameID);
          console.log(gamesAlreadyPosted.indexOf(stringGameID));

          if(gamesAlreadyPosted.indexOf(gameID) <=0){
           console.log("THIS TECHNICALLY WORKS");
        $.post('/api/games', newGame).then(function() {
            console.log("New game added");
          });
        };


        homeTeams.push(homeTeam);
        awayTeams.push(awayTeam);

        createDiv.append(
          `<div class='card-header'>GAME #${gameNum}
            <br>
            <span class="homeTeamHeader">@${homeCity}</span>
          </div>
          <div class='card-body'>
            <div class='row flexToggle'>
              <div class='col-6 homeTeam'>
                <img class="teamImg" src="./images/${homeTeam}.png" alt="${homeTeam}">
                <br>
                <button type='button' data-gameID= ${gameID} data-teamName = ${homeCity + " " + homeTeam} class='btn btn-success bet-button'>
                  ${homeCity + " " + homeTeam}
                </button>
              </div>
              <div class='col-6 awayTeam'>
                <img src="./images/${awayTeam}.png" alt="${awayTeam}">
                <br>
                <button type='button' data-gameID= ${gameID} data-teamName = ${awayCity + " " + awayTeam} class='btn btn-success bet-button'>
                  ${awayCity + " " + awayTeam}
                </button>
              </div>
            </div>
            <hr>
            <div class='row'>          
              <div class='card-footer status'>GAME STATUS:
                <span class='statusColor' style='color: ${textColor}'>
                  ${gameStatus}
                </span> | GAME TIME:
                <span class='timeColor' style='color: ${textColor}'>
                  ${realTime}
                </span>
              </div>
            </div>
          </div>
            `
        );
           //<img src="./images/Yankees.png" alt="Yankees">

        console.log(gameStatus);
        $(".games").append(createDiv);

      }    
    }
  });
};

$(document).ready(function() {  
  $("body").on("click", ".bet-button", function(){
    //console.log($(this).text().trim());
    teamBet = $(this).text().trim();
    //Show modal
    showModal(teamBet);
    //Clear Warning Text
    $(".warningText").text("")
    //Grabbing modal to set max value of scroll to signedInWallet
    var betInputMax = $('.betInput');
    betInputMax.attr("max", signedInWallet)
    //var bet = prompt("How much would you like to bet on " + teamBet + "?");
    var bet = $(".betInput").val();
    console.log(teamBet, parseInt(bet));
    var userBetGameID = this.getAttribute("data-gameID");
    //Click function to confirm modal
    $("body").on("click", ".confirmModal", function(e)
    {
      e.preventDefault();
      var bet = $(".betInput").val();
      if(bet < 1){
        $(".warningText").text("Invalid bet amount")
      }
      else{
        console.log(bet);
        if(parseInt(bet) < parseInt(signedInWallet)){
          hideModal();
        var newBet = {
          user_id: {{userid}},
          user_name: signedInUserName,
          game_id: userBetGameID,
          user_pick: teamBet,
          bet_amount: bet
        }
        console.log("New bet: " + newBet);

        $.post("/api/bets", newBet)
          .then(function(data) {
        });

        signedInWallet = signedInWallet - parseInt(bet);

      console.log(signedInWallet);
      var newWallet = {
          new_wallet: signedInWallet
      }

      $.ajax("/api/user/wallet/" + signedInUser, {
        type: "PUT",
        data: newWallet
      }).then(
        function(){
          console.log("Wallet Updated " + signedInWallet);
        });

        $.ajax("/api/user/wallet/" + signedInUser, {
          type: "PUT",
          data: newWallet
        }).then(
          function(){
            console.log("Wallet Updated " + signedInWallet);
          }
        );
        $.ajax("/api/user/wallet/" + signedInUser, {
          type: "GET",
          data: newWallet
        }).then(
          function() {
            console.log(newWallet)
            $(".userWallet").text("Wallet: " + newWallet.new_wallet)
          }
        )
      } else{$(".warningText").text("Max bet available\: " + signedInWallet)
        
      }
    }
    $(".betInput").val("");   
    })
});

var showBets = function(){
  $.get("/api/bets/table", function(data){
    console.log(data);
    for(var i=0; i< data.length; i++){
      var user = data[i].user_name;
      var userName = user.toUpperCase();
      var bet = data[i].bet_amount;
      var team = data[i].user_pick;
      var dateNtime = data[i].createdAt;
      console.log(typeof dateNtime);
      var betDate = dateNtime.substring(0, 10);
      var betHour = dateNtime.substring(11, 13);
      var betMin = dateNtime.substring(15, 16);
      var betMinSec = dateNtime.substring(13, 19);
      var merediem = " AM";
      betHour = parseInt(betHour) - 5;
      console.log("BETHOUR: " + betHour)
      console.log("BETMIN: " + betMin)
      console.log("BETMINSEC: " + betMinSec)
      if(betHour > 12 && betMin >= 0){
        var merediem = " PM";
      }
      if(betHour > 12){
        betHour = parseInt(betHour) - 12;
      }
      var betTime = dateNtime.substring(11, 19);
      var newBetLine = "<li class='betLog'><span class='logTime'>" + betDate + " " + bet + "</span>" + "<br>" + user + " bet " + bet + " on " + team + "." + "<hr class='betHr'>" + "</li>";
      $(".betsHistory").prepend(newBetLine);
    };
    
  });
}

var showLeader = function(){
  $.get("/api/users/ranking", function(data){
    console.log("IMPORTANT" + data[0]);
    for(var i = 0; i < 5; i++) {
      var leaderTableRow = $("<tr>");
      var rank = i + 1;
      var user = data[i].username;
      var wallet = data[i].wallet;
      var tdRank = $('<td class="leaderNum">').text(rank);     
      var tdUser = $('<td class="leaderName">').text(user);
      var tdWallet = $('<td class="leaderWinnings">').text(wallet);
      leaderTableRow.append(tdRank, tdUser, tdWallet)
      $('.leaderFlex').append(leaderTableRow);
    }
  })
}

var payWinner = function(){

  console.log("--------");
  console.log("ITS RUNNING");
  console.log("--------");

  $.get("/api/games/winner", function(data){
    console.log(data);

    for(var i=0; i<data.length; i++){
      
      if(data[i].winner != "none"){

        if(!data[i].bet_paid){
          if(data[i].user_pick === data[i].winner){
            var winnings = data[i].bet_amount * 2;
            console.log(winnings);

            $.get("/api/user/paying/" + data[i].user_id, function(data){
              userWallet = data.wallet + winnings;
              newWallet = {
                new_wallet: userWallet
              }
              
              $.ajax("/api/user/wallet/" + data.id, {
                type: "PUT",
                data: newWallet

              }).then(function(){
                console.log("Money added", newWallet);
              })

            });

            var paidUser = {
              paid: true
            }
            console.log("-----------------YAYDYRH");
            console.log(data[i].id);
            $.ajax("/api/bets/table/" + data[i].id, {
              type: "PUT",
              data: paidUser
            }).then(function(){
              console.log("You've been paid");
            })
          }
        }
      }else{
        console.log("you've been paid");
      }
    }
  })
}    

var hideModal = function(){
  $(".modal1").hide();
  $(".modal1").css("visibility", "hidden");
  $(".page-mask").removeClass("active");
}

var showModal = function(team){
  $(".modal1").show();
  $(".modal1").css("visibility", "visible");
  $(".page-mask").addClass("active");
  $(".placeBetTeam").text(team)
  //Click cancel to close modal
  $("body").on("click", ".cancelModal", function(){
    hideModal();
    location.reload();
  });
  
}

hideModal();
payWinner();
showLeader();
showBets();
 });



findResults();
showAction();

 

</script>